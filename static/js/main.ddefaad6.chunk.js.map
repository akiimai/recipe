{"version":3,"sources":["services/recipeSearch.js","data.js","RecipeModal.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["headers","X-RapidAPI-Key","getRecipeByName","data","url","typeSelect","offset","itemCount","dietSelect","intolerances","cuisineSelect","excludeIngredients","recipeName","console","log","config","method","axios","then","responseSuccess","catch","responseError","getRecipeDetailsById","id","response","error","diet","value","category","checked","name","cuisines","type","RecipeModal","ingredients","instructions","this","props","show","modaldata","extendedIngredients","map","item","index","amount","Math","round","measures","metric","react_default","a","createElement","key","unitShort","analyzedInstructions","subitem","steps","step","Fragment","Modal","Object","assign","size","aria-labelledby","centered","Header","closeButton","Title","title","Body","className","src","image","alt","readyInMinutes","servings","scope","Footer","Button","onClick","onHide","Component","Main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onRecipeName","evt","target","toLowerCase","replace","objectSpread","state","setState","cuisine","onCheckIntolerances","list","toConsumableArray","i","length","push","toString","handleExclude","preventDefault","exclude","onSelect","recipeSearch","modalData","modalShow","modalClose","onSubmit","results","document","getElementById","classList","remove","prevPage","currentPage","pageActive","nextPage","thisPage","currentTarget","current","pageLink","getElementsByClassName","_this2","data-category","onChange","e","htmlFor","style","fontSize","placeholder","defaultValue","paddingTop","display","href","aria-label","aria-hidden","src_RecipeModal","App","src_Main_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4OAEMA,EAAU,CACZC,iBAAkB,sDAGhBC,EAAkB,SAACC,GACrB,IAAMC,EAAM,8DAAgED,EAAKE,WAAa,WAAaF,EAAKG,OAAS,WAAaH,EAAKI,UAAW,SAAWJ,EAAKK,WAAa,iBAAmBL,EAAKM,aAAe,YAAcN,EAAKO,cAAgB,uBAAyBP,EAAKQ,mBAAqB,UAAYR,EAAKS,WACjUC,QAAQC,IAAIX,EAAKG,OAAQH,EAAKI,WAE9B,IAAMQ,EAAS,CACXC,OAAQ,MACRhB,WAGJ,OAAOiB,IAAMb,EAAKW,GACbG,KAAKC,GACLC,MAAMC,IAeTC,EAAuB,SAAAC,GACzB,IAAMnB,EAAM,kDAAoDmB,EAAK,eAC/DR,EAAS,CACXC,OAAQ,MACRhB,WAGJ,OAAOiB,IAAMb,EAAKW,GACbG,KAAKC,GACLC,MAAMC,IAGTF,EAAkB,SAACK,GACrB,OAAOA,EAASrB,MAGdkB,EAAgB,SAACI,GACnB,OAAOA,GCjDEC,EAAO,CAChB,CAAEC,MAAO,EAAGC,SAAU,OAAQC,SAAS,EAAOC,KAAM,eACpD,CAAEH,MAAO,EAAGC,SAAU,OAAQC,SAAS,EAAOC,KAAM,cACpD,CAAEH,MAAO,EAAGC,SAAU,OAAQC,SAAS,EAAOC,KAAM,oBACpD,CAAEH,MAAO,EAAGC,SAAU,OAAQC,SAAS,EAAOC,KAAM,kBACpD,CAAEH,MAAO,EAAGC,SAAU,OAAQC,SAAS,EAAOC,KAAM,UAG3CrB,EAAe,CACxB,CAAEkB,MAAO,EAAGE,SAAS,EAAOC,KAAM,SAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,OAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,UAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,OAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,WAGzBC,EAAW,CACpB,CAAEJ,MAAO,EAAGE,SAAS,EAAOC,KAAM,WAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,WAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,YAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,UAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,cAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,QAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,UAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,WAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,SAClC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,UACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,WACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,WACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,WACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,kBACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,UACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,YACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,SACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,YACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,SACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,UACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,UACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,oBACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,aACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,mBAG1BE,EAAO,CAChB,CAAEL,MAAO,EAAGE,SAAS,EAAOC,KAAM,eAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,aAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,WAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,aAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,SAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,SAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,aAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,QAClC,CAAEH,MAAO,EAAGE,SAAS,EAAOC,KAAM,YAClC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,SACnC,CAAEH,MAAO,GAAIE,SAAS,EAAOC,KAAM,4BC6BxBG,mLA9EP,IAAIC,EACAC,EA6BJ,OA5BwB,IAApBC,KAAKC,MAAMC,OACXJ,EAAcE,KAAKC,MAAME,UAAUC,oBAAoBC,IAAI,SAACC,EAAMC,GAC9D,IAAIC,EAASC,KAAKC,MAAMJ,EAAKK,SAASC,OAAOJ,QAC7C,OACIK,EAAAC,EAAAC,cAAA,MAAIC,IAAKT,GACLM,EAAAC,EAAAC,cAAA,UAAKT,EAAKZ,MACVmB,EAAAC,EAAAC,cAAA,UAAKP,EAAL,IAAcF,EAAKK,SAASC,OAAOK,cAK/ClB,EAAeC,KAAKC,MAAME,UAAUe,qBAAqBb,IAAI,SAACC,EAAMC,GAChE,IAAIY,EAAUb,EAAKc,MACnB,OACIP,EAAAC,EAAAC,cAAA,OAAKC,IAAKT,GACLD,EAAKZ,KAAQmB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,cAAST,EAAKZ,KAAd,OAAwC,GAC3DmB,EAAAC,EAAAC,cAAA,UACKI,EAAQd,IAAI,SAACc,EAASZ,GACnB,OACIM,EAAAC,EAAAC,cAAA,MAAIC,IAAKT,GAAQY,EAAQE,aAUjDR,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAACQ,EAAA,EAADC,OAAAC,OAAA,GACQzB,KAAKC,MADb,CAEIyB,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAERf,EAAAC,EAAAC,cAACQ,EAAA,EAAMM,OAAP,CAAc1C,GAAG,cAAc2C,aAAW,GACtCjB,EAAAC,EAAAC,cAACQ,EAAA,EAAMQ,MAAP,CAAa5C,GAAG,iCACXa,KAAKC,MAAME,UAAU6B,QAG9BnB,EAAAC,EAAAC,cAACQ,EAAA,EAAMU,KAAP,CAAYC,UAAU,cAClBrB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,cAAcC,IAAKnC,KAAKC,MAAME,UAAUiC,MAAOC,IAAKrC,KAAKC,MAAME,UAAU6B,QACxFnB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,eACXrB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,6BAA6Bf,KAAKC,MAAME,UAAUmC,eAAvD,YACAzB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,4BAA4Bf,KAAKC,MAAME,UAAUoC,WAE1D1B,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,cACXrB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,mBACXrB,EAAAC,EAAAC,cAAA,SAAOmB,UAAU,kBACbrB,EAAAC,EAAAC,cAAA,SAAOmB,UAAU,eACbrB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIyB,MAAM,OAAV,eACA3B,EAAAC,EAAAC,cAAA,MAAIyB,MAAM,OAAV,YAGR3B,EAAAC,EAAAC,cAAA,aACKjB,KAIbe,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,uBACXrB,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WAAMhB,MAIlBc,EAAAC,EAAAC,cAACQ,EAAA,EAAMkB,OAAP,KACI5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAQR,UAAU,YAAYS,QAAS3C,KAAKC,MAAM2C,QAAlD,mBAxEEC,aC+UXC,cA3UX,SAAAA,EAAY7C,GAAO,IAAA8C,EAAA,OAAAvB,OAAAwB,EAAA,EAAAxB,CAAAxB,KAAA8C,IACfC,EAAAvB,OAAAyB,EAAA,EAAAzB,CAAAxB,KAAAwB,OAAA0B,EAAA,EAAA1B,CAAAsB,GAAAK,KAAAnD,KAAMC,KAwBVmD,aAAe,SAACC,GACZ,IAAI3D,EAAO2D,EAAIC,OAAO/D,MAAMgE,cAAcC,QAAQ,IAAK,KACnDzF,EAAIyD,OAAAiC,EAAA,EAAAjC,CAAA,GAAQuB,EAAKW,MAAM3F,MAC3BA,EAAKS,WAAakB,EAClBqD,EAAKY,SAAS,CACV5F,UA9BWgF,EAkCnB3E,WAAa,SAACiF,GACV,IAAI/D,EAAO+D,EAAIC,OAAO/D,MAAMgE,cAAcC,QAAQ,IAAK,KACnDzF,EAAIyD,OAAAiC,EAAA,EAAAjC,CAAA,GAAQuB,EAAKW,MAAM3F,MAC3BA,EAAKK,WAAakB,EAClByD,EAAKY,SAAS,CACV5F,UAvCWgF,EA2CnBzE,cAAgB,SAAC+E,GACb,IAAIO,EAAUP,EAAIC,OAAO/D,MAAMgE,cAAcC,QAAQ,IAAK,KACtDzF,EAAIyD,OAAAiC,EAAA,EAAAjC,CAAA,GAAQuB,EAAKW,MAAM3F,MAC3BA,EAAKO,cAAgBsF,EACrBb,EAAKY,SAAS,CACV5F,UAhDWgF,EAoDnB9E,WAAa,SAACoF,GACV,IAAIzD,EAAOyD,EAAIC,OAAO/D,MAAMgE,cAAcC,QAAQ,IAAK,KACnDzF,EAAIyD,OAAAiC,EAAA,EAAAjC,CAAA,GAAQuB,EAAKW,MAAM3F,MAC3BA,EAAKE,WAAa2B,EAClBmD,EAAKY,SAAS,CACV5F,UAzDWgF,EA6DnBc,oBAAsB,SAACR,EAAK9C,GACxB,IAAIuD,EAAO,GACPzF,EAAYmD,OAAAuC,EAAA,EAAAvC,CAAOuB,EAAKW,MAAMrF,cAClCA,EAAakC,GAAOd,QAAU4D,EAAIC,OAAO7D,QAEzC,IAAK,IAAIuE,EAAI,EAAGA,EAAI3F,EAAa4F,OAAQD,KACL,IAA5B3F,EAAa2F,GAAGvE,SAChBqE,EAAKI,KAAK7F,EAAa2F,GAAGtE,MAIlC,IAAI3B,EAAIyD,OAAAiC,EAAA,EAAAjC,CAAA,GAAQuB,EAAKW,MAAM3F,MAC3BA,EAAKM,aAAeyF,EAAKK,WAAWX,QAAQ,IAAK,QAAQD,cAEzDR,EAAKY,SAAS,CACV5F,UA5EWgF,EAgFnBqB,cAAgB,SAACf,EAAK9C,GAClB8C,EAAIgB,iBACJ,IAAItG,EAAIyD,OAAAiC,EAAA,EAAAjC,CAAA,GAAQuB,EAAKW,MAAM3F,MACvBuG,EAAUjB,EAAIC,OAAO/D,MAAMgE,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,KAAM,QAC/EzF,EAAKQ,mBAAqB+F,EAE1BvB,EAAKY,SAAS,CACV5F,UAvFWgF,EA2FnBwB,SAAW,SAAClB,EAAKlE,GACbqF,EAAkCrF,GAC7BL,KAAK,SAACM,GACHX,QAAQC,IAAIU,GAEZ2D,EAAKY,SAAS,CACVc,UAAWrF,MAGlBN,KAAK,WACFiE,EAAKY,SAAS,CACVe,WAAW,MAGlB1F,MAAMP,QAAQC,MAzGJqE,EA4GnB4B,WAAa,WACT5B,EAAKY,SAAS,CACVe,WAAW,KA9GA3B,EAkHnB6B,SAAW,SAAAvB,GACPA,EAAIgB,iBAEJG,EAA6BzB,EAAKW,MAAM3F,MACnCe,KAAK,SAACM,GAKH,OAJAX,QAAQC,IAAIU,EAASyF,SACrB9B,EAAKY,SAAS,CACVG,KAAM1E,EAASyF,UAEZzF,IAEVJ,MAAMP,QAAQC,KAEnBoG,SAASC,eAAe,OAAOC,UAAUC,OAAO,SA/HjClC,EAkInBmC,SAAW,SAAC7B,GACR,IAAI8B,EAAcpC,EAAKW,MAAMyB,YACzBpH,EAAIyD,OAAAiC,EAAA,EAAAjC,CAAA,GAAQuB,EAAKW,MAAM3F,MAEP,IAAhBoH,GACApH,EAAKG,OAAS,EAEd6E,EAAKY,SAAS,CACV5F,QACD,kBAAMgF,EAAK6B,SAASvB,OAEvB8B,GAAe,EACfpH,EAAKG,OAASH,EAAKG,OAAS,EAC5B6E,EAAKqC,WAAWrC,EAAKW,MAAMyB,YAAc,GAEzCpC,EAAKY,SAAS,CACVwB,cACApH,QACD,kBAAMgF,EAAK6B,SAASvB,OApJZN,EAwJnBsC,SAAW,SAAChC,GACR,IAAI8B,EAAcpC,EAAKW,MAAMyB,YACzBpH,EAAIyD,OAAAiC,EAAA,EAAAjC,CAAA,GAAQuB,EAAKW,MAAM3F,MAC3BoH,GAAe,EACfpH,EAAKG,OAAS,EAAI6E,EAAKW,MAAMyB,YAE7BpC,EAAKqC,WAAWrC,EAAKW,MAAMyB,YAAc,GAEzCpC,EAAKY,SAAS,CACVwB,cACApH,QACD,kBAAMgF,EAAK6B,SAASvB,MAnKRN,EAsKnBuC,SAAW,SAACjC,GACR,IAAI8B,EAAc9B,EAAIkC,cAAchG,MAChCxB,EAAIyD,OAAAiC,EAAA,EAAAjC,CAAA,GAAQuB,EAAKW,MAAM3F,MAC3BA,EAAKG,OAAU,EAAIiH,EAAe,EAElCpC,EAAKqC,WAAW/B,EAAIkC,cAAchG,OAElCwD,EAAKY,SAAS,CACVwB,cACApH,QACD,kBAAMgF,EAAK6B,SAASvB,MAhLRN,EAmLnBqC,WAAa,SAACI,GAGV,IAFA,IAAIC,EAAWX,SAASY,uBAAuB,aAEtC1B,EAAI,EAAGA,EAAIyB,EAASxB,OAAQD,IAC7BwB,IAAYC,EAASzB,GAAGzE,MACxBkG,EAASzB,GAAG9B,WAAa,UAEzBuD,EAASzB,GAAGgB,UAAUC,OAAO,WAvLrClC,EAAKW,MAAQ,CACTpE,KAAMA,EACNjB,aAAcA,EACdsB,SAAUA,EACVC,KAAMA,EACNkE,KAAM,GACN/F,KAAM,CACFS,WAAY,GACZJ,WAAY,GACZC,aAAc,GACdC,cAAe,GACfL,WAAY,GACZM,mBAAoB,GACpBJ,UAAW,EACXD,OAAQ,GAEZwG,WAAW,EACXD,UAAW,GACXU,YAAa,GArBFpC,wEA+LV,IAAA4C,EAAA3F,KACDV,EAAOU,KAAK0D,MAAMpE,KAAKe,IAAI,SAACC,EAAMC,GAClC,OACIM,EAAAC,EAAAC,cAAA,UAAQ6E,gBAAetF,EAAKd,SAAUwB,IAAKT,GAAQD,EAAKZ,QAI5DrB,EAAe2B,KAAK0D,MAAMrF,aAAagC,IAAI,SAACC,EAAMC,GAClD,OACIM,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,+BAA+BlB,IAAKT,GAC/CM,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,WAAWsC,UAAU,mBAAmBxC,KAAMY,EAAKZ,KAAMD,QAASkG,EAAKjC,MAAMrF,aAAakC,GAAOd,QAASoG,SAAU,SAAAC,GAAC,OAAIH,EAAK9B,oBAAoBiC,EAAGvF,MACjKM,EAAAC,EAAAC,cAAA,SAAOmB,UAAU,mBAAmB6D,QAASzF,EAAKZ,MAAOY,EAAKZ,SAKtEC,EAAWK,KAAK0D,MAAM/D,SAASU,IAAI,SAACC,EAAMC,GAC1C,OACIM,EAAAC,EAAAC,cAAA,UAAQC,IAAKT,GAAQD,EAAKZ,QAI9BE,EAAOI,KAAK0D,MAAM9D,KAAKS,IAAI,SAACC,EAAMC,GAClC,OACIM,EAAAC,EAAAC,cAAA,UAAQC,IAAKT,GAAQD,EAAKZ,QAI9BoE,EAAO9D,KAAK0D,MAAMI,KAChB9D,KAAK0D,MAAMI,KAAKzD,IAAI,SAAAC,GAClB,OACIO,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,uBAAuB3C,MAAOe,EAAKnB,GAAI6B,IAAKV,EAAKnB,GAAIwD,QAAS,SAACmD,GAAD,OAAOH,EAAKpB,SAASuB,EAAGxF,EAAKnB,MACtG0B,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,aAAaC,IAAK,mCAAqC7B,EAAK8B,MAAOC,IAAK/B,EAAK9B,aAC5FqC,EAAAC,EAAAC,cAAA,MAAImB,UAAU,gBAAgB5B,EAAK0B,OACnCnB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,6BAA6BT,EAAKgC,eAAvC,YACAzB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,4BAA4BT,EAAKiC,cAMpD,cAEN,OACI1B,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,4BACXrB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,oBACXrB,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,KAAGiF,MAAO,CAAEC,SAAU,SAAtB,sDAEJpF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,kBACXrB,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,aAAa7D,UAAU,2BAAtC,kBACArB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,kBACXrB,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAOsC,UAAU,eAAe/C,GAAG,aAAa+G,YAAY,gBAAgBC,aAAcnG,KAAK0D,MAAMlF,WAAYqH,SAAU7F,KAAKoD,iBAGpJvC,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,kBACXrB,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,eAAe7D,UAAU,2BAAxC,SACArB,EAAAC,EAAAC,cAAA,UAAQmB,UAAU,wBAAwB2D,SAAU7F,KAAK5B,YACrDyC,EAAAC,EAAAC,cAAA,2BACCzB,IAGTuB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,kBACXrB,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,eAAe7D,UAAU,2BAAxC,iBACArB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,WAAW8D,MAAO,CAAEC,SAAU,OAAQG,WAAY,QAC5D/H,IAGTwC,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,kBACXrB,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,eAAe7D,UAAU,2BAAxC,YACArB,EAAAC,EAAAC,cAAA,UAAQmB,UAAU,wBAAwB2D,SAAU7F,KAAK1B,eACrDuC,EAAAC,EAAAC,cAAA,2BACCpB,IAGTkB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,kBACXrB,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,eAAe7D,UAAU,2BAAxC,SACArB,EAAAC,EAAAC,cAAA,UAAQmB,UAAU,wBAAwB2D,SAAU7F,KAAK/B,YACrD4C,EAAAC,EAAAC,cAAA,2BACCnB,IAGTiB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,kBACXrB,EAAAC,EAAAC,cAAA,SAAOgF,QAAQ,qBAAqB7D,UAAU,2BAA9C,uBACArB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sDAELF,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,iBAAiB8D,MAAO,CAAEK,QAAS,SAC9CxF,EAAAC,EAAAC,cAAA,YAAUnB,KAAK,OAAOsC,UAAU,eAAe/C,GAAG,qBAAqB0G,SAAU7F,KAAKoE,cAAe8B,YAAY,eAGzHrF,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,6BACXrB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQnB,KAAK,SAASsC,UAAU,oBAAoBS,QAAS3C,KAAK4E,UAAlE,cAMhB/D,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,gBAAf,YACarB,EAAAC,EAAAC,cAAA,KAAGmB,UAAU,cAAcoE,KAAK,+IAAhC,uBADb,SACoOzF,EAAAC,EAAAC,cAAA,KAAGmB,UAAU,cAAcoE,KAAK,+GAAhC,YAGpOzF,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,YAAY/C,GAAG,QAC1B0B,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,4BACV4B,GAGLjD,EAAAC,EAAAC,cAAA,OAAK5B,GAAG,MAAM+C,UAAU,eAAeqE,aAAW,2BAC9C1F,EAAAC,EAAAC,cAAA,MAAImB,UAAU,cACVrB,EAAAC,EAAAC,cAAA,MAAImB,UAAU,YAAYS,QAAS3C,KAAKkF,UACpCrE,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,YAAYqE,aAAW,YAClC1F,EAAAC,EAAAC,cAAA,QAAMyF,cAAY,QAAlB,QACA3F,EAAAC,EAAAC,cAAA,QAAMmB,UAAU,WAAhB,cAGRrB,EAAAC,EAAAC,cAAA,MAAI5B,GAAG,SAAS+C,UAAU,mBAAmBS,QAAS3C,KAAKsF,SAAU/F,MAAO,GAAGsB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,aAAf,MAC/ErB,EAAAC,EAAAC,cAAA,MAAI5B,GAAG,SAAS+C,UAAU,YAAYS,QAAS3C,KAAKsF,SAAU/F,MAAO,GAAGsB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,aAAf,MACxErB,EAAAC,EAAAC,cAAA,MAAI5B,GAAG,SAAS+C,UAAU,YAAYS,QAAS3C,KAAKsF,SAAU/F,MAAO,GAAGsB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,aAAf,MACxErB,EAAAC,EAAAC,cAAA,MAAImB,UAAU,YAAYS,QAAS3C,KAAKqF,UACpCxE,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,YAAYoE,KAAK,IAAIC,aAAW,QAC3C1F,EAAAC,EAAAC,cAAA,QAAMyF,cAAY,QAAlB,QACA3F,EAAAC,EAAAC,cAAA,QAAMmB,UAAU,WAAhB,aAOpBrB,EAAAC,EAAAC,cAAA,OAAK5B,GAAG,WAER0B,EAAAC,EAAAC,cAAC0F,EAAD,CAAatG,UAAWH,KAAK0D,MAAMe,UAAWvE,KAAMF,KAAK0D,MAAMgB,UAAW9B,OAAQ5C,KAAK2E,qBArUpF9B,aCQJ6D,mLARX,OACE7F,EAAAC,EAAAC,cAAA,OAAK5B,GAAG,aACN0B,EAAAC,EAAAC,cAAC4F,EAAD,cAJU9D,aCQE+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrG,EAAAC,EAAAC,cAACoG,EAAD,MAASrC,SAASC,eAAe,SD2H3C,kBAAmBqC,WACrBA,UAAUC,cAAcC,MAAMxI,KAAK,SAAAyI,GACjCA,EAAaC","file":"static/js/main.ddefaad6.chunk.js","sourcesContent":["import axios from 'axios'; \r\n\r\nconst headers = {\r\n    \"X-RapidAPI-Key\": \"908ac684e4msh08a4c08f50317abp1a4e19jsn27c44c8339e4\"\r\n}\r\n\r\nconst getRecipeByName = (data) => {\r\n    const url = \"https://webknox-recipes.p.rapidapi.com/recipes/search?type=\" + data.typeSelect + \"&offset=\" + data.offset + \"&number=\" + data.itemCount +\"&diet=\" + data.dietSelect + \"&intolerances=\" + data.intolerances + \"&cuisine=\" + data.cuisineSelect + \"&excludeIngredients=\" + data.excludeIngredients + \"&query=\" + data.recipeName\r\n    console.log(data.offset, data.itemCount)\r\n    \r\n    const config = {\r\n        method: \"GET\", \r\n        headers\r\n    }\r\n\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}; \r\n\r\nconst getRecipeSummary = id => {\r\n    const url = \"https://webknox-recipes.p.rapidapi.com/recipes/\" + id + \"/summary\"\r\n    const config = {\r\n        method: \"GET\", \r\n        headers\r\n    }\r\n\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nconst getRecipeDetailsById = id => {\r\n    const url = \"https://webknox-recipes.p.rapidapi.com/recipes/\" + id + \"/information\"\r\n    const config = {\r\n        method: \"GET\", \r\n        headers\r\n    }\r\n\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nconst responseSuccess = (response) => {\r\n    return response.data;\r\n};\r\n\r\nconst responseError = (error) => {\r\n    return error; \r\n};\r\n\r\nexport { getRecipeByName, getRecipeSummary, getRecipeDetailsById }","export const diet = [\r\n    { value: 1, category: 'diet', checked: false, name: 'Pescatarian'}, \r\n    { value: 2, category: 'diet', checked: false, name: 'Vegetarian'}, \r\n    { value: 3, category: 'diet', checked: false, name: 'Lacto Vegetarian'}, \r\n    { value: 4, category: 'diet', checked: false, name: 'Ovo Vegetarian'}, \r\n    { value: 5, category: 'diet', checked: false, name: 'Vegan'}\r\n]\r\n\r\nexport const intolerances = [\r\n    { value: 1, checked: false, name: 'Dairy'}, \r\n    { value: 2, checked: false, name: 'Egg' }, \r\n    { value: 3, checked: false, name: 'Gluten'}, \r\n    { value: 4, checked: false, name: 'Soy' }, \r\n    { value: 5, checked: false, name: 'Peanut' }\r\n]\r\n\r\nexport const cuisines = [\r\n    { value: 1, checked: false, name: 'African'}, \r\n    { value: 2, checked: false, name: 'Chinese'}, \r\n    { value: 3, checked: false, name: 'Japanese'}, \r\n    { value: 4, checked: false, name: 'Korean'}, \r\n    { value: 5, checked: false, name: 'Vietnamese'}, \r\n    { value: 6, checked: false, name: 'Thai'}, \r\n    { value: 7, checked: false, name: 'Indian'}, \r\n    { value: 8, checked: false, name: 'British'}, \r\n    { value: 9, checked: false, name: 'Irish'},\r\n    { value: 10, checked: false, name: 'French'}, \r\n    { value: 11, checked: false, name: 'Italian'}, \r\n    { value: 12, checked: false, name: 'Mexican'}, \r\n    { value: 13, checked: false, name: 'Spanish'}, \r\n    { value: 14, checked: false, name: 'Middle Eastern'}, \r\n    { value: 15, checked: false, name: 'Jewish'}, \r\n    { value: 16, checked: false, name: 'American'}, \r\n    { value: 17, checked: false, name: 'Cajun'}, \r\n    { value: 18, checked: false, name: 'Southern'}, \r\n    { value: 19, checked: false, name: 'Greek'}, \r\n    { value: 20, checked: false, name: 'German'}, \r\n    { value: 21, checked: false, name: 'Nordic'}, \r\n    { value: 22, checked: false, name: 'Eastern European'}, \r\n    { value: 23, checked: false, name: 'Caribbean'}, \r\n    { value: 24, checked: false, name: 'Latin American'}\r\n]\r\n\r\nexport const type = [\r\n    { value: 1, checked: false, name: 'Main Course'}, \r\n    { value: 2, checked: false, name: 'Side Dish'}, \r\n    { value: 3, checked: false, name: 'Dessert'}, \r\n    { value: 4, checked: false, name: 'Appetizer'}, \r\n    { value: 5, checked: false, name: 'Salad'}, \r\n    { value: 6, checked: false, name: 'Bread'}, \r\n    { value: 7, checked: false, name: 'Breakfast'}, \r\n    { value: 8, checked: false, name: 'Soup'}, \r\n    { value: 9, checked: false, name: 'Beverage'},\r\n    { value: 10, checked: false, name: 'Sauce'}, \r\n    { value: 11, checked: false, name: 'Drink'}\r\n]","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nclass RecipeModal extends Component {\r\n    render() {\r\n        let ingredients;\r\n        let instructions;\r\n        if (this.props.show === true) {\r\n            ingredients = this.props.modaldata.extendedIngredients.map((item, index) => {\r\n                let amount = Math.round(item.measures.metric.amount);\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{amount} {item.measures.metric.unitShort}</td>\r\n                    </tr>\r\n                )\r\n            });\r\n\r\n            instructions = this.props.modaldata.analyzedInstructions.map((item, index) => {\r\n                let subitem = item.steps;\r\n                return (\r\n                    <div key={index}>\r\n                        {item.name ? (<div><strong>{item.name}: </strong></div>) : \"\"}\r\n                        <ul>\r\n                            {subitem.map((subitem, index) => {\r\n                                return (\r\n                                    <li key={index}>{subitem.step}</li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                )\r\n            })\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header id=\"modal-title\" closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {this.props.modaldata.title}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"modal-body\">\r\n                        <img className=\"modal-image\" src={this.props.modaldata.image} alt={this.props.modaldata.title} />\r\n                        <div className=\"recipe-info\">\r\n                            <div><strong>Cook Time: </strong>{this.props.modaldata.readyInMinutes} minutes</div>\r\n                            <div><strong>Servings: </strong>{this.props.modaldata.servings}</div>\r\n                        </div>\r\n                        <div className=\"modal-text\">\r\n                            <div className=\"ingredient-list\">\r\n                                <table className=\"table table-sm\">\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">Ingredients</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {ingredients}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"recipe-instructions\">\r\n                                <h5>Instructions:</h5>\r\n                                <div>{instructions}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button className=\"close-btn\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecipeModal; ","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './Main.css';\r\nimport * as recipeSearch from './services/recipeSearch';\r\nimport { diet, intolerances, cuisines, type } from './data';\r\nimport RecipeModal from './RecipeModal';\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            diet: diet,\r\n            intolerances: intolerances,\r\n            cuisines: cuisines,\r\n            type: type,\r\n            list: [],\r\n            data: {\r\n                recipeName: '',\r\n                dietSelect: '',\r\n                intolerances: '',\r\n                cuisineSelect: '',\r\n                typeSelect: '',\r\n                excludeIngredients: '',\r\n                itemCount: 6,\r\n                offset: 0\r\n            },\r\n            modalShow: false,\r\n            modalData: [],\r\n            currentPage: 1,\r\n        }\r\n    }\r\n\r\n    onRecipeName = (evt) => {\r\n        let name = evt.target.value.toLowerCase().replace(\" \", \"+\");\r\n        let data = { ...this.state.data };\r\n        data.recipeName = name;\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    dietSelect = (evt) => {\r\n        let diet = evt.target.value.toLowerCase().replace(\" \", \"+\");\r\n        let data = { ...this.state.data };\r\n        data.dietSelect = diet;\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    cuisineSelect = (evt) => {\r\n        let cuisine = evt.target.value.toLowerCase().replace(\" \", \"+\");\r\n        let data = { ...this.state.data };\r\n        data.cuisineSelect = cuisine;\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    typeSelect = (evt) => {\r\n        let type = evt.target.value.toLowerCase().replace(\" \", \"+\");\r\n        let data = { ...this.state.data };\r\n        data.typeSelect = type;\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    onCheckIntolerances = (evt, index) => {\r\n        let list = [];\r\n        let intolerances = [...this.state.intolerances]\r\n        intolerances[index].checked = evt.target.checked;\r\n\r\n        for (let i = 0; i < intolerances.length; i++) {\r\n            if (intolerances[i].checked === true) {\r\n                list.push(intolerances[i].name)\r\n            }\r\n        };\r\n\r\n        let data = { ...this.state.data };\r\n        data.intolerances = list.toString().replace(\",\", \"%2C+\").toLowerCase();\r\n\r\n        this.setState({\r\n            data\r\n        });\r\n    };\r\n\r\n    handleExclude = (evt, index) => {\r\n        evt.preventDefault();\r\n        let data = { ...this.state.data };\r\n        let exclude = evt.target.value.toLowerCase().replace(/\\s+/g, '').replace(/,/g, '%2C+');\r\n        data.excludeIngredients = exclude;\r\n\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    onSelect = (evt, id) => {\r\n        recipeSearch.getRecipeDetailsById(id)\r\n            .then((response) => {\r\n                console.log(response)\r\n\r\n                this.setState({\r\n                    modalData: response\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    modalShow: true\r\n                })\r\n            })\r\n            .catch(console.log)\r\n    };\r\n\r\n    modalClose = () => {\r\n        this.setState({\r\n            modalShow: false\r\n        })\r\n    };\r\n\r\n    onSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        recipeSearch.getRecipeByName(this.state.data)\r\n            .then((response) => {\r\n                console.log(response.results);\r\n                this.setState({\r\n                    list: response.results\r\n                })\r\n                return response;\r\n            })\r\n            .catch(console.log)\r\n\r\n        document.getElementById('nav').classList.remove('hide');\r\n    };\r\n\r\n    prevPage = (evt) => {\r\n        let currentPage = this.state.currentPage;\r\n        let data = { ...this.state.data };\r\n\r\n        if (currentPage === 1) {\r\n            data.offset = 0\r\n\r\n            this.setState({\r\n                data\r\n            }, () => this.onSubmit(evt))\r\n        } else {\r\n            currentPage -= 1;\r\n            data.offset = data.offset - 6;\r\n            this.pageActive(this.state.currentPage - 1);\r\n\r\n            this.setState({\r\n                currentPage,\r\n                data\r\n            }, () => this.onSubmit(evt))\r\n        }\r\n    };\r\n\r\n    nextPage = (evt) => {\r\n        let currentPage = this.state.currentPage;\r\n        let data = { ...this.state.data };\r\n        currentPage += 1;\r\n        data.offset = 6 * this.state.currentPage;\r\n\r\n        this.pageActive(this.state.currentPage + 1);\r\n\r\n        this.setState({\r\n            currentPage,\r\n            data\r\n        }, () => this.onSubmit(evt))\r\n    }\r\n\r\n    thisPage = (evt) => {\r\n        let currentPage = evt.currentTarget.value;\r\n        let data = { ...this.state.data };\r\n        data.offset = (6 * currentPage) - 6;\r\n\r\n        this.pageActive(evt.currentTarget.value);\r\n\r\n        this.setState({\r\n            currentPage,\r\n            data\r\n        }, () => this.onSubmit(evt))\r\n    }\r\n\r\n    pageActive = (current) => {\r\n        let pageLink = document.getElementsByClassName('page-item');\r\n\r\n        for (let i = 0; i < pageLink.length; i++) {\r\n            if (current === pageLink[i].value) {\r\n                pageLink[i].className += \" active\"\r\n            } else {\r\n                pageLink[i].classList.remove(\"active\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let diet = this.state.diet.map((item, index) => {\r\n            return (\r\n                <option data-category={item.category} key={index}>{item.name}</option>\r\n            )\r\n        });\r\n\r\n        let intolerances = this.state.intolerances.map((item, index) => {\r\n            return (\r\n                <div className=\"form-check form-check-inline\" key={index}>\r\n                    <input type=\"checkbox\" className=\"form-check-input\" name={item.name} checked={this.state.intolerances[index].checked} onChange={e => this.onCheckIntolerances(e, index)} />\r\n                    <label className=\"form-check-label\" htmlFor={item.name}>{item.name}</label>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        let cuisines = this.state.cuisines.map((item, index) => {\r\n            return (\r\n                <option key={index}>{item.name}</option>\r\n            )\r\n        });\r\n\r\n        let type = this.state.type.map((item, index) => {\r\n            return (\r\n                <option key={index}>{item.name}</option>\r\n            )\r\n        });\r\n\r\n        let list = this.state.list\r\n            ? this.state.list.map(item => {\r\n                return (\r\n                    <div className=\"col-sm-4 recipe-item\" value={item.id} key={item.id} onClick={(e) => this.onSelect(e, item.id)}>\r\n                        <img className=\"recipe-img\" src={\"http://webknox.com/recipeImages/\" + item.image} alt={item.recipeName} />\r\n                        <h4 className=\"recipe-title\">{item.title}</h4>\r\n                        <div>\r\n                            <div><strong>Cook Time: </strong>{item.readyInMinutes} minutes</div>\r\n                            <div><strong>Servings: </strong>{item.servings}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            })\r\n            : \"in progress\"\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container form-container\">\r\n                    <div className=\"form-description\">\r\n                        <h1>What to cook?</h1>\r\n                        <p style={{ fontSize: \"18px\" }}>For the adventurous cook seeking new recipe ideas</p>\r\n                    </div>\r\n                    <form>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"recipeName\" className=\"col-sm-4 col-form-label\">Find a Recipe:</label>\r\n                            <div className=\"col-sm-8 space\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"recipeName\" placeholder=\"Find a recipe\" defaultValue={this.state.recipeName} onChange={this.onRecipeName} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"restrictions\" className=\"col-sm-4 col-form-label\">Diet:</label>\r\n                            <select className=\"col-sm-8 form-control\" onChange={this.dietSelect}>\r\n                                <option>Choose...</option>\r\n                                {diet}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"restrictions\" className=\"col-sm-4 col-form-label\">Intolerances:</label>\r\n                            <div className=\"col-sm-8\" style={{ fontSize: \"15px\", paddingTop: \"8px\" }}>\r\n                                {intolerances}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"restrictions\" className=\"col-sm-4 col-form-label\">Cuisine:</label>\r\n                            <select className=\"col-sm-8 form-control\" onChange={this.cuisineSelect}>\r\n                                <option>Choose...</option>\r\n                                {cuisines}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"restrictions\" className=\"col-sm-4 col-form-label\">Type:</label>\r\n                            <select className=\"col-sm-8 form-control\" onChange={this.typeSelect}>\r\n                                <option>Choose...</option>\r\n                                {type}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"ingredient-exclude\" className=\"col-sm-4 col-form-label\">Exclude Ingredients:\r\n                            <div><small>(separate ingredients with a comma)</small></div>\r\n                            </label>\r\n                            <div className=\"col-sm-8 space\" style={{ display: \"flex\" }}>\r\n                                <textarea type=\"text\" className=\"form-control\" id=\"ingredient-exclude\" onChange={this.handleExclude} placeholder=\"Optional\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row submit-ctn\">\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-secondary\" onClick={this.onSubmit}>Search</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"image-credit\">\r\n                    Image by <a className=\"credit-link\" href=\"https://pixabay.com/users/OpenClipart-Vectors-30363/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1296432\">OpenClipart-Vectors</a> from <a className=\"credit-link\" href=\"https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1296432\">Pixabay</a>\r\n                </div>\r\n\r\n                <div className=\"container\" id=\"list\">\r\n                    <div className=\"row recipe-ctn col-sm-12\">\r\n                        {list}\r\n                    </div>\r\n\r\n                    <nav id=\"nav\" className=\"nav-pag hide\" aria-label=\"Page navigation example\">\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\" onClick={this.prevPage}>\r\n                                <div className=\"page-link\" aria-label=\"Previous\">\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                    <span className=\"sr-only\">Previous</span>\r\n                                </div>\r\n                            </li>\r\n                            <li id=\"page-1\" className=\"page-item active\" onClick={this.thisPage} value={1}><div className=\"page-link\">1</div></li>\r\n                            <li id=\"page-2\" className=\"page-item\" onClick={this.thisPage} value={2}><div className=\"page-link\">2</div></li>\r\n                            <li id=\"page-3\" className=\"page-item\" onClick={this.thisPage} value={3}><div className=\"page-link\">3</div></li>\r\n                            <li className=\"page-item\" onClick={this.nextPage}>\r\n                                <div className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                    <span className=\"sr-only\">Next</span>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div id=\"bottom\"></div>\r\n\r\n                <RecipeModal modaldata={this.state.modalData} show={this.state.modalShow} onHide={this.modalClose} />\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Main; ","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"container\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}