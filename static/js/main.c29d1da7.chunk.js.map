{"version":3,"sources":["services/recipeSearch.js","data.js","RecipeModal.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["headers","X-RapidAPI-Key","getRecipeByName","data","url","typeSelect","dietSelect","intolerances","cuisineSelect","excludeIngredients","recipeName","console","log","config","method","axios","then","responseSuccess","catch","responseError","getRecipeDetailsById","id","response","error","diet","value","category","checked","name","cuisines","type","RecipeModal","ingredients","instructions","this","props","show","modaldata","extendedIngredients","map","item","index","react_default","a","createElement","key","measures","metric","amount","unitShort","analyzedInstructions","subitem","steps","step","Fragment","Modal","Object","assign","size","aria-labelledby","centered","Header","closeButton","Title","title","Body","className","src","image","alt","readyInMinutes","servings","scope","Footer","Button","onClick","onHide","Component","Main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onRecipeName","evt","target","toLowerCase","replace","objectSpread","state","setState","cuisine","onCheckIntolerances","list","toConsumableArray","i","length","push","toString","handleExclude","preventDefault","exclude","onSelect","recipeSearch","modalData","modalShow","modalClose","onSubmit","results","_this2","data-category","onChange","e","htmlFor","style","textAlign","paddingBottom","placeholder","defaultValue","fontSize","paddingTop","display","justifyContent","width","marginTop","src_RecipeModal","App","src_Main_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c29d1da7.chunk.js","sourcesContent":["import axios from 'axios'; \r\n\r\nconst headers = {\r\n    \"X-RapidAPI-Key\": \"908ac684e4msh08a4c08f50317abp1a4e19jsn27c44c8339e4\"\r\n}\r\n\r\nconst getRecipeByName = (data) => {\r\n    const url = \"https://webknox-recipes.p.rapidapi.com/recipes/search?type=\" + data.typeSelect + \"&diet=\" + data.dietSelect + \"&intolerances=\" + data.intolerances + \"&cuisine=\" + data.cuisineSelect + \"&excludeIngredients=\" + data.excludeIngredients + \"&query=\" + data.recipeName\r\n    console.log(url)\r\n    \r\n    const config = {\r\n        method: \"GET\", \r\n        headers\r\n    }\r\n\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}; \r\n\r\nconst getRecipeSummary = id => {\r\n    const url = \"https://webknox-recipes.p.rapidapi.com/recipes/\" + id + \"/summary\"\r\n    const config = {\r\n        method: \"GET\", \r\n        headers\r\n    }\r\n\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nconst getRecipeDetailsById = id => {\r\n    const url = \"https://webknox-recipes.p.rapidapi.com/recipes/\" + id + \"/information\"\r\n    const config = {\r\n        method: \"GET\", \r\n        headers\r\n    }\r\n\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nconst responseSuccess = (response) => {\r\n    return response.data;\r\n};\r\n\r\nconst responseError = (error) => {\r\n    return error; \r\n};\r\n\r\nexport { getRecipeByName, getRecipeSummary, getRecipeDetailsById }","export const diet = [\r\n    { value: 1, category: 'diet', checked: false, name: 'Pescatarian'}, \r\n    { value: 2, category: 'diet', checked: false, name: 'Vegetarian'}, \r\n    { value: 3, category: 'diet', checked: false, name: 'Lacto Vegetarian'}, \r\n    { value: 4, category: 'diet', checked: false, name: 'Ovo Vegetarian'}, \r\n    { value: 5, category: 'diet', checked: false, name: 'Vegan'}\r\n]\r\n\r\nexport const intolerances = [\r\n    { value: 1, checked: false, name: 'Dairy'}, \r\n    { value: 2, checked: false, name: 'Egg' }, \r\n    { value: 3, checked: false, name: 'Gluten'}, \r\n    { value: 4, checked: false, name: 'Soy' }, \r\n    { value: 5, checked: false, name: 'Peanut' }\r\n]\r\n\r\nexport const cuisines = [\r\n    { value: 1, checked: false, name: 'African'}, \r\n    { value: 2, checked: false, name: 'Chinese'}, \r\n    { value: 3, checked: false, name: 'Japanese'}, \r\n    { value: 4, checked: false, name: 'Korean'}, \r\n    { value: 5, checked: false, name: 'Vietnamese'}, \r\n    { value: 6, checked: false, name: 'Thai'}, \r\n    { value: 7, checked: false, name: 'Indian'}, \r\n    { value: 8, checked: false, name: 'British'}, \r\n    { value: 9, checked: false, name: 'Irish'},\r\n    { value: 10, checked: false, name: 'French'}, \r\n    { value: 11, checked: false, name: 'Italian'}, \r\n    { value: 12, checked: false, name: 'Mexican'}, \r\n    { value: 13, checked: false, name: 'Spanish'}, \r\n    { value: 14, checked: false, name: 'Middle Eastern'}, \r\n    { value: 15, checked: false, name: 'Jewish'}, \r\n    { value: 16, checked: false, name: 'American'}, \r\n    { value: 17, checked: false, name: 'Cajun'}, \r\n    { value: 18, checked: false, name: 'Southern'}, \r\n    { value: 19, checked: false, name: 'Greek'}, \r\n    { value: 20, checked: false, name: 'German'}, \r\n    { value: 21, checked: false, name: 'Nordic'}, \r\n    { value: 22, checked: false, name: 'Eastern European'}, \r\n    { value: 23, checked: false, name: 'Caribbean'}, \r\n    { value: 24, checked: false, name: 'Latin American'}\r\n]\r\n\r\nexport const type = [\r\n    { value: 1, checked: false, name: 'Main Course'}, \r\n    { value: 2, checked: false, name: 'Side Dish'}, \r\n    { value: 3, checked: false, name: 'Dessert'}, \r\n    { value: 4, checked: false, name: 'Appetizer'}, \r\n    { value: 5, checked: false, name: 'Salad'}, \r\n    { value: 6, checked: false, name: 'Bread'}, \r\n    { value: 7, checked: false, name: 'Breakfast'}, \r\n    { value: 8, checked: false, name: 'Soup'}, \r\n    { value: 9, checked: false, name: 'Beverage'},\r\n    { value: 10, checked: false, name: 'Sauce'}, \r\n    { value: 11, checked: false, name: 'Drink'}\r\n]","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nclass RecipeModal extends Component {\r\n    render() {\r\n        let ingredients;\r\n        let instructions;\r\n        if (this.props.show === true) {\r\n            ingredients = this.props.modaldata.extendedIngredients.map((item, index) => {\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.measures.metric.amount} {item.measures.metric.unitShort}</td>\r\n                    </tr>\r\n                )\r\n            });\r\n\r\n            instructions = this.props.modaldata.analyzedInstructions.map((item, index) => {\r\n                let subitem = item.steps;\r\n                return (\r\n                    <div key={index}>\r\n                        {item.name ? (<div><strong>{item.name}: </strong></div>) : \"\"}\r\n                        <ul>\r\n                            {subitem.map((subitem, index) => {\r\n                                return (\r\n                                    <li key={index}>{subitem.step}</li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                )\r\n            })\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header id=\"modal-title\" closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {this.props.modaldata.title}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"modal-body\">\r\n                        <img className=\"modal-image\" src={this.props.modaldata.image} alt={this.props.modaldata.title} />\r\n                        <div className=\"add-info\">\r\n                            <div><strong>Cook Time: </strong>{this.props.modaldata.readyInMinutes} minutes</div>\r\n                            <div><strong>Servings: </strong>{this.props.modaldata.servings}</div>\r\n                        </div>\r\n                        <div className=\"modal-text\">\r\n                            <div className=\"ingredient-list\">\r\n                                <table className=\"table table-sm\">\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">Ingredients</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {ingredients}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div>\r\n                                <h5>Instructions:</h5>\r\n                                <div>{instructions}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecipeModal; ","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './Main.css';\r\nimport * as recipeSearch from './services/recipeSearch';\r\nimport { diet, intolerances, cuisines, type } from './data';\r\nimport RecipeModal from './RecipeModal';\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            diet: diet,\r\n            intolerances: intolerances,\r\n            cuisines: cuisines,\r\n            type: type,\r\n            list: [],\r\n            data: {\r\n                recipeName: '',\r\n                dietSelect: '',\r\n                intolerances: '',\r\n                cuisineSelect: '',\r\n                typeSelect: '',\r\n                excludeIngredients: ''\r\n            },\r\n            modalShow: false,\r\n            modalData: []\r\n        }\r\n    }\r\n\r\n    onRecipeName = (evt) => {\r\n        let name = evt.target.value.toLowerCase().replace(\" \", \"+\");\r\n        let data = { ...this.state.data };\r\n        data.recipeName = name;\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    dietSelect = (evt) => {\r\n        let diet = evt.target.value.toLowerCase().replace(\" \", \"+\");\r\n        let data = { ...this.state.data };\r\n        data.dietSelect = diet;\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    cuisineSelect = (evt) => {\r\n        let cuisine = evt.target.value.toLowerCase().replace(\" \", \"+\");\r\n        let data = { ...this.state.data };\r\n        data.cuisineSelect = cuisine;\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    typeSelect = (evt) => {\r\n        let type = evt.target.value.toLowerCase().replace(\" \", \"+\");\r\n        let data = { ...this.state.data };\r\n        data.typeSelect = type;\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    onCheckIntolerances = (evt, index) => {\r\n        let list = [];\r\n        let intolerances = [...this.state.intolerances]\r\n        intolerances[index].checked = evt.target.checked;\r\n\r\n        for (let i = 0; i < intolerances.length; i++) {\r\n            if (intolerances[i].checked === true) {\r\n                list.push(intolerances[i].name)\r\n            }\r\n        };\r\n\r\n        let data = { ...this.state.data };\r\n        data.intolerances = list.toString().replace(\",\", \"%2C+\").toLowerCase();\r\n\r\n        this.setState({\r\n            data\r\n        });\r\n    };\r\n\r\n    handleExclude = (evt, index) => {\r\n        evt.preventDefault();\r\n        let data = {...this.state.data}; \r\n        let exclude = evt.target.value.toLowerCase().replace(/\\s+/g, '').replace(/,/g, '%2C+'); \r\n        data.excludeIngredients = exclude;\r\n\r\n        this.setState({\r\n            data\r\n        })\r\n    };\r\n\r\n    onSelect = (evt, id) => {\r\n        recipeSearch.getRecipeDetailsById(id)\r\n            .then((response) => {\r\n                console.log(response)\r\n\r\n                this.setState({\r\n                    modalData: response\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    modalShow: true \r\n                })\r\n            })\r\n            .catch(console.log)\r\n    };\r\n\r\n    modalClose = () => {\r\n        this.setState({\r\n            modalShow: false\r\n        })\r\n    };\r\n\r\n    onSubmit = evt => {\r\n        evt.preventDefault();\r\n        console.log(this.state.data)\r\n\r\n        recipeSearch.getRecipeByName(this.state.data)\r\n            .then((response) => {\r\n                console.log(response.results);\r\n                this.setState({\r\n                    list: response.results\r\n                })\r\n                return response;\r\n            })\r\n            .catch(console.log)\r\n    };\r\n\r\n    render() {\r\n        let diet = this.state.diet.map((item, index) => {\r\n            return (\r\n                <option data-category={item.category} key={index}>{item.name}</option>\r\n            )\r\n        });\r\n\r\n        let intolerances = this.state.intolerances.map((item, index) => {\r\n            return (\r\n                <div className=\"form-check form-check-inline\" key={index}>\r\n                    <input type=\"checkbox\" className=\"form-check-input\" name={item.name} checked={this.state.intolerances[index].checked} onChange={e => this.onCheckIntolerances(e, index)} />\r\n                    <label className=\"form-check-label\" htmlFor={item.name}>{item.name}</label>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        let cuisines = this.state.cuisines.map((item, index) => {\r\n            return (\r\n                <option key={index}>{item.name}</option>\r\n            )\r\n        });\r\n\r\n        let type = this.state.type.map((item, index) => {\r\n            return (\r\n                <option key={index}>{item.name}</option>\r\n            )\r\n        });\r\n\r\n        let list = this.state.list\r\n            ? this.state.list.map(item => {\r\n                return (\r\n                    <div className=\"col-sm-4 recipe-item\" value={item.id} key={item.id} onClick={(e) => this.onSelect(e, item.id)}>\r\n                        <img className=\"recipe-img\" src={\"http://webknox.com/recipeImages/\" + item.image} alt={item.recipeName} />\r\n                        <h4 className=\"recipe-title\">{item.title}</h4>\r\n                        <div>\r\n                            <div><strong>Cook Time: </strong>{item.readyInMinutes} minutes</div>\r\n                            <div><strong>Servings: </strong>{item.servings}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            })\r\n            : \"in progress\"\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container form-container\">\r\n                    <h2 style={{ textAlign: \"center\", paddingBottom: \"30px\" }}>What should I cook?</h2>\r\n                    <form>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"recipeName\" className=\"col-sm-4 col-form-label\">Find a Recipe:</label>\r\n                            <div className=\"col-sm-8 space\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"recipeName\" placeholder=\"Find a recipe\" defaultValue={this.state.recipeName} onChange={this.onRecipeName} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"restrictions\" className=\"col-sm-4 col-form-label\">Diet:</label>\r\n                            <select className=\"col-sm-8 form-control\" onChange={this.dietSelect}>\r\n                                <option>Choose...</option>\r\n                                {diet}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"restrictions\" className=\"col-sm-4 col-form-label\">Intolerances:</label>\r\n                            <div className=\"col-sm-8\" style={{ fontSize: \"15px\", paddingTop: \"8px\" }}>\r\n                                {intolerances}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"restrictions\" className=\"col-sm-4 col-form-label\">Cuisine:</label>\r\n                            <select className=\"col-sm-8 form-control\" onChange={this.cuisineSelect}>\r\n                                <option>Choose...</option>\r\n                                {cuisines}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"restrictions\" className=\"col-sm-4 col-form-label\">Type:</label>\r\n                            <select className=\"col-sm-8 form-control\" onChange={this.typeSelect}>\r\n                                <option>Choose...</option>\r\n                                {type}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"ingredient-exclude\" className=\"col-sm-4 col-form-label\">Exclude Ingredients:  \r\n                            <div><small>(separate ingredients with a comma)</small></div>\r\n                            </label>\r\n                            <div className=\"col-sm-8 space\" style={{ display: \"flex\" }}>\r\n                                <textarea type=\"text\" className=\"form-control\" id=\"ingredient-exclude\" onChange={this.handleExclude} placeholder=\"Optional\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.onSubmit} style={{ width: \"150px\", marginTop: \"40px\" }}>Search</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row recipe-ctn col-sm-12\">\r\n                        {list}\r\n                    </div>\r\n                </div>\r\n\r\n                <RecipeModal modaldata={this.state.modalData} show={this.state.modalShow} onHide={this.modalClose} />\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Main; ","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main'; \n\nclass App extends Component {\n  render() {\n    return (\n      <Main />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}